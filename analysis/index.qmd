---
title: "Most Visited Museums 2024"
author: "Jan Oledan"
abstract: "Analysis of most visited art museums in 2024"
format: 
  html: default
---

```{r}
#| output: false
library(tidyverse)
library(rvest)
library(janitor)
library(stringr)
library(gt)
library(ggplot2)
library(ggiraph)
library(tidygeocoder)
library(sf)

url <- "https://en.wikipedia.org/wiki/List_of_most-visited_art_museums"

# get url, table, clean column names
df <- read_html(url) %>%
    html_node("table.wikitable") %>%
    html_table(fill = TRUE) %>%
    clean_names() %>%
    mutate(
        museum = str_remove(museum,  "\\s*\\([^\\)]+\\)") %>% str_trim(), 
        address = paste(museum, country_and_city, sep = ", "),
        address = case_when(
            address %in% c("Gyeongju National Museum, Gyeongju",
                "National Museum of Modern and Contemporary Art, Gwacheon",
                "National Museum of Modern and Contemporary Art, Seoul", 
                "National Museum of Korea, Seoul", 
                "National Folk Museum of Korea, Seoul") ~ paste0(address, ", South Korea"),
            TRUE ~ address
        ),
        visitors_annually = str_replace_all(visitors_annually, ", ", ","), 
        year = str_extract(visitors_annually, "(?<=\\().+(?=\\))") %>% as.numeric(), 
        visitors = str_extract(visitors_annually, "^[^\\s]+") %>% str_replace_all(., ",", ""),
        visitors = case_when( # fix value of NPG
            museum == "National Portrait Gallery" ~ "1578065",
            TRUE ~ visitors),
        visitors = as.numeric(visitors)/1000000, 
        rank = rank(-visitors)
        ) %>%
    geocode(address, method = 'arcgis', full_results = TRUE) %>%
    select(rank, museum, visitors, year, address, 
        lat, long, 
        score = attributes.Score,
        iso3 = attributes.Country,
        country = attributes.CntryName) %>%
    arrange(rank)

```

```{r}

# Barplot

p <- ggplot(df %>% 
    filter(rank <= 10), 
    aes(x = reorder(museum, visitors), 
        y = visitors)) + 
    geom_bar_interactive(aes(tooltip = visitors), 
        stat = "identity",
        fill = "steelblue") + 
    labs(
        title = "Title",
        x = "", 
        y = "Visitors in 2024* (millions)") +
    scale_y_continuous(
        expand = c(0,0), 
        position = "right",
        breaks = c(0, 4, 8)) + 
    coord_flip() + 
    theme_minimal() + 
    theme(
        # Axis lines
        axis.line = element_line(color = "black", linewidth = 0.5),
        axis.line.y = element_line(),
        axis.line.x.top = element_line(color = "black"),  # show top x-axis line
        # title position 
        plot.title.position = "plot", 
        plot.caption.position =  "plot",
        # Margin for top axis title and ticks
        axis.title.x.top = element_text(margin = margin(b = 10)),
        axis.text.x.top = element_text(margin = margin(b = 5)),
        axis.text.y = element_text(hjust = 0),
        # Optional: give plot more breathing room
        plot.margin = margin(t = 20, r = 20, b = 20, l = 20),

        # grid lines
        panel.grid.minor.x = element_blank(),
        panel.grid.major.y = element_blank()

    )

girafe(ggobj = p, width_svg = 8, height_svg = 6)


```

```{r}

# df_sf <- st_as_sf(df, coords = c("long", "lat"))

# ggplot() +
#   geom_point(data = df, aes(x = long, y = lat, size = visitors)) + scale_size(
#     range = c(1, 9),
#     guide = guide_legend(
#       direction = "horizontal",
#       nrow = 1,
#       label.position = "bottom"))
```